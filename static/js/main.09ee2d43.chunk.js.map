{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","name","setName","className","length","href","map","answerOption","key","onClick","nextQuestion","userName","prompt","alert","handleAnswerButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAEe,SAASA,IACvB,IAAMC,EAAY,CACjB,CACCC,aAAc,iCACdC,cAAe,CACd,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGrC,CACCH,aAAc,uBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,yCACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MAnCJ,EAwCiBC,mBAAS,GAxC1B,mBAwCtBC,EAxCsB,KAwCLC,EAxCK,OA0CKF,oBAAS,GA1Cd,mBA0CtBG,EA1CsB,KA0CXC,EA1CW,OA4CHJ,mBAAS,GA5CN,mBA4CtBK,EA5CsB,KA4CfC,EA5Ce,OA8CLN,mBAAS,IA9CJ,mBA8CtBO,EA9CsB,KA8ChBC,EA9CgB,KAsE7B,OACC,yBAAKC,UAAU,OAGbN,EACA,oCACA,yBAAKM,UAAU,iBAAiBF,EAAhC,gBAAmDF,EAAnD,WAAkEV,EAAUe,QAE5E,6BACC,uBAAGC,KAAK,cACP,mDAKF,oCACC,yBAAKF,UAAU,oBACd,yBAAKA,UAAU,kBACd,0CAAgBR,EAAgB,GADjC,IAC4CN,EAAUe,QAEtD,yBAAKD,UAAU,iBAAiBd,EAAUM,GAAiBL,eAE5D,yBAAKa,UAAU,kBACbd,EAAUM,GAAiBJ,cAAce,KAAI,SAACC,GAAD,OAAkB,4BAAQC,IAAKD,EAAaf,WAAYW,UAAU,eAAeM,QAAS,kBA7C7G,SAAChB,IAEd,IAAdA,GAEHO,EAASD,EAAQ,GAIlB,IAAMW,EAAef,EAAkB,EACvC,GAAIe,EAAerB,EAAUe,OAC5BR,EAAmBc,OACd,CAEL,IAAIC,EAAWC,OAAO,0BACtBV,EAAQS,GACRE,MAAM,MAAD,OAAOF,EAAP,gDAELb,GAAa,IA4BmIgB,CAAwBP,EAAad,aAAac,EAAaf,kBC1FlNuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC7B,EAAD,OAEF8B,SAASC,eAAe,U","file":"static/js/main.09ee2d43.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\n\tconst [showScore, setShowScore] = useState(false)\n\n\tconst [score, setScore] = useState(0)\n\t\n\tconst [name, setName] = useState('')\n\n\tconst handleAnswerButtonClick = (isCorrect) => {\n\n\t\tif (isCorrect === true){\n\t\t\t// alert('Correct Answer !')\n\t\t\tsetScore(score + 1)\n\t\t}\n\n\n\t\tconst nextQuestion = currentQuestion + 1\n\t\tif (nextQuestion < questions.length){\n\t\t\tsetCurrentQuestion(nextQuestion)\n\t\t} else{\n\n\t\t\tvar userName = prompt('Please Enter your name')\n\t\t\tsetName(userName)\n\t\t\talert(`Hi ${userName}. You have completed the quiz successfully!`)\n\t\t\t\n\t\t\tsetShowScore(true)\n\t\t\t// window.location.reload()\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{/* HINT: replace \"false\" with logic to display the \n      score when the user has answered all the questions */}\n\t\t\t{showScore ? (\n\t\t\t\t<>\n\t\t\t\t<div className='score-section'>{name}, You scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<a href='/quiz-app/'>\n\t\t\t\t\t\t<button>Restart Quiz</button>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion+1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => <button key={answerOption.answerText} className='answerButton' onClick={() =>handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>)}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}